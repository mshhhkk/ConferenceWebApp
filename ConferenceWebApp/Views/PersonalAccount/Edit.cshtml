@using ConferenceWebApp.Application.DTOs.PersonalAccountDTOs
@model EditUserDTO

@{
    Layout = "_SettingsLayout";
}

<link rel="stylesheet" href="~/css/modal.css" />
<link rel="stylesheet" href="~/css/settings.css" />

@if (!Model.IsRegisteredForConference)
{
    <div class="settings-form-input" style="text-align: justify;">
        Внимание! При неполном заполнении ФИО, даты рождения, организации, специализации и номера телефона вы не будете зарегистрированы на конференцию.
    </div>
}

<form asp-action="Edit" method="post" enctype="multipart/form-data">
    <div class="settings-avatar-block">
        <img id="avatarPreview" src="@Model.PhotoUrl" alt="Фото" class="settings-avatar" />
        <div class="settings-photo-btns">
            <!-- Кнопка загрузки нового фото -->
            <input asp-for="Photo" type="file" id="Photo" style="display:none;" />
            <button type="button" id="addPhotoBtn" class="settings-save-btn" onclick="document.getElementById('Photo').click();">
                Добавить фото
            </button>

            <!-- Галочка для удаления фото -->
            <div class="settings-photo-checkbox">
                <input type="checkbox" id="removePhotoCheckbox" name="RemovePhoto" value="true"
                @if (Model.PhotoUrl==null)
                {
                    <text>disabled</text>
                }
                />
                <label for="removePhotoCheckbox"
                @if (Model.PhotoUrl == null)
                {
                    <text>style="color: grey;"</text>
                }
                >
                    Удалить фото
                </label>
            </div>
        </div>
    </div>

    <div class="settings-form-row">
        <div class="settings-form-group">
            <label asp-for="LastName" class="settings-form-label">Фамилия</label>
            <input asp-for="LastName" class="settings-form-input" placeholder="Фамилия" />
            <span asp-validation-for="LastName" class="text-danger"></span>
        </div>
        <div class="settings-form-group">
            <label asp-for="FirstName" class="settings-form-label">Имя</label>
            <input asp-for="FirstName" class="settings-form-input" placeholder="Имя" />
            <span asp-validation-for="FirstName" class="text-danger"></span>
        </div>
        <div class="settings-form-group">
            <label asp-for="MiddleName" class="settings-form-label">Отчество</label>
            <input asp-for="MiddleName" class="settings-form-input" placeholder="Отчество" />
            <span asp-validation-for="MiddleName" class="text-danger"></span>
        </div>
    </div>

    <div class="settings-form-row">
        <div class="settings-form-group">
            <label asp-for="BirthDate" class="settings-form-label">Дата рождения</label>
            <input asp-for="BirthDate" type="date" class="settings-form-input"
                   min="1920-01-01" max="@DateTime.Now.ToString("yyyy-MM-dd")"
                   value="@(Model.BirthDate.HasValue ? Model.BirthDate.Value.ToString("yyyy-MM-dd") : "2000-01-01")" />
            <small class="form-text text-muted">Выберите дату в формате дд.мм.гггг</small>
            <span asp-validation-for="BirthDate" class="text-danger"></span>
        </div>
    </div>

    <div class="settings-form-row">
        <div class="settings-form-group">
            <label asp-for="Organization" class="settings-form-label">Организация</label>
            <input asp-for="Organization" class="settings-form-input" placeholder="Организация" />
            <span asp-validation-for="Organization" class="text-danger"></span>
        </div>
        <div class="settings-form-group">
            <label asp-for="Specialization" class="settings-form-label">Специализация</label>
            <input asp-for="Specialization" class="settings-form-input" placeholder="Специализация" />
            <span asp-validation-for="Specialization" class="text-danger"></span>
        </div>
        <div class="settings-form-group">
            <label asp-for="PhoneNumber" class="settings-form-label">Телефон</label>
            <input asp-for="PhoneNumber" class="settings-form-input" placeholder="+375 (XX) XXX-XX-XX" />
            <span asp-validation-for="PhoneNumber" class="text-danger"></span>
        </div>
    </div>

    <div class="settings-form-row">
        <div class="settings-form-group">
            <label asp-for="Position" class="settings-form-label">Должность</label>
            <select asp-for="Position" class="settings-form-input" asp-items="Html.GetEnumSelectList<ConferenceWebApp.Domain.Enums.Position>()">
                <option value="">-- Выберите должность --</option>
            </select>
            <span asp-validation-for="Position" class="text-danger"></span>
        </div>

        <div class="settings-form-group">
            <label asp-for="Degree" class="settings-form-label">Учёная степень</label>
            <select asp-for="Degree" class="settings-form-input" asp-items="Html.GetEnumSelectList<ConferenceWebApp.Domain.Enums.ScientificDegree>()">
                <option value="">-- Выберите степень --</option>
            </select>
            <span asp-validation-for="Degree" class="text-danger"></span>
        </div>
    </div>

    <div class="settings-form-actions">
        <button type="submit" class="settings-save-btn">Сохранить изменения</button>
        <a href="/Reports/Index" class="settings-cancel-btn">Отмена</a>
    </div>

    <div class="delete-account-info">
        <span class="delete-account-text">Вы можете</span>
        <span class="delete-account-link" onclick="openDeleteAccountModal()">удалить свою учетную запись</span>
    </div>

    <!-- Скрытое поле для удаления фото -->
    <input type="hidden" id="RemovePhoto" name="RemovePhoto" value="false" />

</form>

<form id="deleteAccountForm" asp-action="DeleteAccount" method="post" style="display:none;">
    @Html.AntiForgeryToken()
</form>

<div id="deleteAccountModal" class="modal" style="display:none;">
    <div class="modal-content">
        <div class="modal-header">
            <span class="modal-title">Подтверждение удаления</span>
        </div>
        <div class="modal-body">
            <p>Вы точно хотите удалить свою учетную запись? Это действие необратимо.</p>
        </div>
        <div class="modal-footer">
            <button type="button" class="modal-btn modal-btn-yes" onclick="confirmDeleteAccount()">Удалить</button>
            <button type="button" class="modal-btn modal-btn-no" onclick="closeDeleteAccountModal()">Отмена</button>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Функция для открытия и закрытия модального окна удаления
        function openDeleteAccountModal() {
            document.getElementById("deleteAccountModal").style.display = "flex";
        }
        function closeDeleteAccountModal() {
            document.getElementById("deleteAccountModal").style.display = "none";
        }
        function confirmDeleteAccount() {
            document.getElementById("deleteAccountForm").submit();
        }

        // Закрытие модального окна при клике вне его
        window.addEventListener("click", function (e) {
            let modal = document.getElementById("deleteAccountModal");
            if (e.target === modal) closeDeleteAccountModal();
        });

        document.getElementById('Photo').addEventListener('change', function(event) {
            const file = event.target.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    document.getElementById('avatarPreview').src = e.target.result;

                    // Сделать кнопку удаления фото доступной
                    document.getElementById('removePhotoBtn').disabled = false;
                    document.getElementById('removePhotoBtn').style.border = ''; // Убираем серую границу
                    document.getElementById('removePhotoBtn').style.backgroundColor = ''; // Убираем серый фон
                    document.getElementById('removePhotoBtn').style.color = ''; // Убираем серый текст
                };
                reader.readAsDataURL(file);
            }
        });

         function removePhoto() {
            const preview = document.getElementById('avatarPreview');

            // Если фото дефолтное
            if (preview.src.includes('/images/user.svg')) {
                alert('Фото не может быть удалено, так как оно дефолтное.');
                return;  // Останавливаем выполнение, если фото дефолтное
            }

            // Если фото не дефолтное, меняем его на дефолтное
            preview.src = '/images/user.svg';  // Путь к дефолтному фото

            // Устанавливаем скрытое поле для удаления фото
            const removePhotoInput = document.createElement('input');
            removePhotoInput.type = 'hidden';
            removePhotoInput.name = 'RemovePhoto';
            removePhotoInput.value = 'true'; // Устанавливаем, что фото должно быть удалено

            // Добавляем скрытое поле в форму
            document.querySelector('form').appendChild(removePhotoInput);

            // Сделаем кнопку неактивной, если фото снова дефолтное
            document.getElementById('removePhotoBtn').disabled = true;
            document.getElementById('removePhotoBtn').style.border = '1px solid grey';
            document.getElementById('removePhotoBtn').style.backgroundColor = '#f0f0f0';
            document.getElementById('removePhotoBtn').style.color = 'grey';
        }
    </script>
}
